id: 360045457592
url: https://circleci.zendesk.com/api/v2/help_center/ja/articles/360045457592.json
html_url: https://support.circleci.com/hc/ja/articles/360045457592
author_id: 405652843914
comments_disabled: true
draft: false
promoted: false
position: 0
vote_sum: -2
vote_count: 2
section_id: 115003755828
created_at: '2020-07-06T14:14:24Z'
updated_at: '2020-10-22T07:03:11Z'
name: ジョブ上で、アップロードされたアーティファクトのURL へのアクセス
title: ジョブ上で、アップロードされたアーティファクトのURL へのアクセス
source_locale: en-us
locale: ja
outdated: false
outdated_locales: []
edited_at: '2020-10-22T07:03:11Z'
user_segment_id: null
permission_group_id: 237867
label_names:
  - artifacts
  - api
  - slack
  - store_artifacts
body: >-
  <p><a
  href="https://circleci.com/docs/2.0/configuration-reference/#store_artifacts"
  target="_blank" rel="noopener">store_artifacts ステップ</a>
  の後、アップロードされたアーティファクトは、ジョブが完了する前でも、すぐに API からアクセスできる状態になります。</p><p>それを踏まえて、API
  呼び出しを行い、値を変数に格納すれば、保存されたアーティファクトの URL にアクセスできます。 URL
  は、その後のステップで次のような使い方ができます。</p><ul>

  <li>

  <a href="https://circleci.com/orbs/registry/orb/circleci/slack"
  target="_blank" rel="noopener">Slack Orb</a> と一緒に使用することで、アーティファクトの URL
  をメッセージとして送信できます。</li>

  <li>

  <a
  href="https://circleci.com/docs/2.0/configuration-reference/#the-when-attribute"
  target="_blank" rel="noopener">when 属性</a>
  と組み合わせることで、ステップが失敗したとき(<code>on_fail</code>)にのみ API 呼び出しを実行できます。</li>

  </ul><p>結果として、ビルドが失敗した場合にのみ、アップロードされたアーティファクト
  (スクリーンショットや、失敗に関する詳細な情報を含むファイルなど) のURLをSlack メッセージとして送信できます。</p><h1><span
  style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica,
  Arial, sans-serif;">実装例</span></h1><p><a style="background-color: #ffffff;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,
  sans-serif; font-size: 15px;"
  href="https://circleci.com/docs/2.0/managing-api-tokens/#creating-a-personal-api-token"
  target="_blank" rel="noopener">パーソナル API トークンを生成</a>し、<a
  style="background-color: #ffffff; font-family: -apple-system,
  BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif; font-size:
  15px;"
  href="https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project"
  target="_blank" rel="noopener">プロジェクトレベルの環境変数</a>へ保存する必要があります。以下の例では、<code
  style="font-size: 15px;"> CIRCLE_API_TOKEN
  </code>がそれに該当します。</p><p>次のスニペットでは、<code>(vcs)</code> を <code>github</code> または
  <code>bitbucket</code> のいすれか、 <code>(org)</code> を組織のアカウント、
  <code>(project)</code> をプロジェクトの名前に置き換える必要があります。 すべてのアーティファクトを確実に使用できるようにするには、
  <code>store_artifacts</code> ステップの後に実行する必要があります。</p><pre>- run:    name: Get
  artifacts    when: on_fail    command: |      artifacts=$(curl -X GET
  "https://circleci.com/api/v2/project/(vcs)/(org)/(project)/$CIRCLE_BUILD_NUM/artifacts"
  \      -H "Accept: application/json" \      -u "$CIRCLE_API_TOKEN:")      echo
  "export ARTIFACT_RESPONSE=$artifacts" &gt;&gt;
  $BASH_ENV</pre><p>上記のステップを実行した後、<code>$ARTIFACT_RESPONSE</code>
  を使用して、ビルドのアーティファクト情報にアクセスできます。これは、Slack
  メッセージを送信するステップなど、他のステップに渡すことができます。</p><p> </p>
