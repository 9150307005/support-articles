id: 360003649774
url: >-
  https://circleci.zendesk.com/api/v2/help_center/en-us/articles/360003649774.json
html_url: >-
  https://support.circleci.com/hc/en-us/articles/360003649774-Permission-Denied-When-Creating-Directory-or-Writing-a-File
author_id: 25261361207
comments_disabled: true
draft: false
promoted: false
position: 0
vote_sum: -142
vote_count: 292
section_id: 115003756627
created_at: '2018-04-29T21:58:26Z'
updated_at: '2021-02-15T14:36:36Z'
name: Permission Denied When Creating Directory or Writing a File
title: Permission Denied When Creating Directory or Writing a File
source_locale: en-us
locale: en-us
outdated: false
outdated_locales: []
edited_at: '2020-10-22T06:59:44Z'
user_segment_id: null
permission_group_id: 237867
label_names:
  - permissions
body: "<p>If you receive an error telling you that you do not have permissions to create a directory or to write a file to a directory then this is likely an indication that your script is attempting to write to a directory that the user running the build does not own.\_</p>\n<p>This is a somewhat common pitfall that many users run into when the move into a CI environment.\_</p>\n<p>The key thing to remember is that the builds run as the\_<code>distiller</code>\_user on MacOS builds and typically\_<code>ubunutu</code>\_on Linux builds. These users only have write permissions in their\_<code>$HOME</code>\_folders and places like\_<code>/tmp</code>. This is not unique to CI, this is true by default in almost all Linux/Unix environments.</p>\n<p>To confirm which user your build runs as you can run the <code>whoami</code> command as a part of your build process.<br><br><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif; font-size: 1.5em;\">Solution</span></p>\n<ol>\n<li>Store things inside of a folder that the user running the build has permissions to.</li>\n<li>Change the ownership of the directory with the\_<code>chown</code>\_command before trying to write to it.</li>\n</ol>\n<p>We recommend the first solution. If you decide to go with the second solution then a command like this should work in both MacOS and Linux builds.</p>\n<p><code>chown -R $USER:$USER /path/to/directory</code></p>\n<p><code>$USER</code>\_is a global environment variable that refers to the current logged in user.</p>\n<p><code>/path/to/directory</code>\_should be replaced with the path to where you want to write to.</p>"
